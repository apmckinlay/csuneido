include makefile.common

ifdef DEBUG
  OUTPUT = mingw_debug
  FLAGS = -g
  LDFLAGS =
else
  OUTPUT = mingw_release
  FLAGS = -O3 -DNDEBUG
  LDFLAGS = -s
endif

CC=gcc
CXX=g++ -std=gnu++11
FLAGS += -DCOMPILER=MinGW -Werror -Wall -Wno-sign-compare -Wfloat-equal  -Wno-write-strings \
	-Wno-char-subscripts  -Wno-narrowing -Wno-unknown-pragmas -Wuninitialized \
	-D_USE_32BIT_TIME_T -D_WIN32_WINNT=0x0600 \
	-DJOB_OBJECT_LIMIT_KILL_ON_JOB_CLOSE=0x2000

.SUFFIXES:

$(OUTPUT)/%.o : %.c
	@echo $<
	@$(CC) $(FLAGS) -c -o $@ $<
	$(call make-depend,$<,$@,$(subst .o,.d,$@),gcc)

$(OUTPUT)/%.o : %.cpp
	@echo $<
	@$(CXX) $(FLAGS) -c -o $@ $<
	$(call make-depend,$<,$@,$(subst .o,.d,$@),g++)

SOURCES := $(subst sunapp.cpp ,,$(SOURCES)) # ostreamstd.cpp
OBJECTS = $(patsubst %.c,$(OUTPUT)/%.o,$(subst .cpp,.c,$(SOURCES)))
DEPENDS = $(subst .o,.d,$(OBJECTS))

all : $(OUTPUT)/suneido.exe

$(OUTPUT)/suneido.exe : $(OBJECTS) gc_$(OUTPUT).a $(OUTPUT)/res.o
	@$(CXX) $(FLAGS) -c -o $(OUTPUT)/build.o build.cpp
	@echo link $(OUTPUT)/suneido.exe
	@$(CXX) $(LDFLAGS) -o $@ $^ $(OUTPUT)/build.o \
		-lws2_32 -lgdi32 -lcomdlg32 -lcomctl32 -lole32 -loleaut32 -luuid -liphlpapi \
		-mwindows -mconsole
		
$(OUTPUT)/res.o : suneido.rc resource.h res/suneido.exe.manifest
	windres suneido.rc $@
	
-include $(DEPENDS)

.PHONY : clean
clean : 
	del /q $(OUTPUT)\\*.*

include makefile.install
